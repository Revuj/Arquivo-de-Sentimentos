{"version":3,"sources":["components/YearsRange.js","components/SentimentChart.js","utils/exportCsv.js","components/ExportModal.js","components/News.js","components/Main.js","assets/logo.svg","components/Navbar.js","assets/rafa.jpg","assets/ze.jpg","assets/tiago.jpg","components/About.js","components/ExamplesModal.js","App.js","i18n.js","index.js"],"names":["YearsRange","values","setValues","step","min","max","onChange","renderTrack","props","children","onMouseDown","onTouchStart","style","height","display","width","ref","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","index","isDragged","outline","backgroundColor","position","bottom","right","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","color","defaults","global","defaultFontColor","defaultFontFamily","SentimentChart","sentimentScores","firstYearIndex","lastYearIndex","sources","entities","groupSources","labels","slice","datasets","colorIndex","entity","has","sentiments","source","push","length","finalSentimentos","i","cur","j","label","data","fill","borderColor","yAxisID","graphData","options","scales","yAxes","type","id","fieldSeparator","quoteStrings","decimalSeparator","showLabels","showTitle","useTextFile","useBom","useKeysAsHeaders","years","withTranslation","t","setShowModal","title","exportPdf","exportImage","formats","useState","Set","selectedFormats","setSelectedFormats","handleClick","e","target","classList","contains","exportResults","filename","jsonData","dataEntry","yearCounter","forEach","value","replace","ExportToCsv","generateCsv","exportCsv","className","role","tabIndex","onClick","onKeyDown","size","map","format","checked","stopPropagation","prev","filter","x","add","toggleFormat","Button","previews","selectedEntity","setSelectedEntity","hidden","setHidden","dropdownOpen","setDropdownOpen","preview","website","href","link","rel","site_name","description","src","image","alt","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","Object","keys","DropdownItem","newsSources","examples","setExamples","form","setForm","setSentimentScores","magnitudeScores","setMagnitudeScores","setPreviews","setYears","setSources","loadingSources","setLoadingSources","showExportModal","setShowExportModal","exportTitle","setExportTitle","exportData","setExportData","showToolTip","setShowToolTip","queryEntities","setQueryEntities","scoreCardRef","createRef","magnitudeCardRef","useEffect","clearOutputs","JSON","stringify","handleSubmit","handleAdd","concat","requestAnalysis","params","current","assign","axios","get","process","then","res","st","st_en","sentiment","magnitude","curEntity","requestNews","fileName","exportComponentAsPDF","pdfOptions","w","h","unit","orientation","exportComponentAsJPEG","entitiesInput","entitiesElements","Input","name","placeholder","el","elI","handleChange","onKeyPress","key","preventDefault","handleRemove","Form","FormGroup","Label","for","toggleSource","onMouseEnter","onMouseLeave","visibility","i18n","setTab","tab","setShowExamplesModal","setIsOpen","changeLanguage","lng","Navbar","light","expand","NavbarBrand","Logo","NavbarToggler","Collapse","navbar","Nav","NavItem","UncontrolledDropdown","nav","inNavbar","Rafa","Ze","Tiago","exampleEntities","Map","pickExamples","example","App","showExamplesModal","resources","en","translation","pt","use","detector","initReactI18next","init","fallbackLng","keySeparator","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04b85297.chunk.js","sourcesContent":["import React from 'react';\nimport { Range, getTrackBackground } from 'react-range';\n\nconst YearsRange = ({ values, setValues }) => {\n  return (\n    <Range\n      step={1}\n      min={2000}\n      max={2021}\n      values={values}\n      onChange={(values) => setValues(values)}\n      renderTrack={({ props, children }) => (\n        <div\n          onMouseDown={props.onMouseDown}\n          onTouchStart={props.onTouchStart}\n          style={{\n            ...props.style,\n            height: '20px',\n            display: 'flex',\n            width: '100%',\n          }}\n        >\n          <div\n            ref={props.ref}\n            style={{\n              height: '5px',\n              width: '100%',\n              borderRadius: '4px',\n              background: getTrackBackground({\n                values,\n                colors: ['#EBEBF9', '#00d555', '#EBEBF9'],\n                min: 2000,\n                max: 2021,\n              }),\n              alignSelf: 'center',\n            }}\n          >\n            {children}\n          </div>\n        </div>\n      )}\n      renderThumb={({ index, props, isDragged }) => (\n        <div\n          {...props}\n          style={{\n            ...props.style,\n            height: '13px',\n            width: '13px',\n            borderRadius: '50%',\n            outline: 'none',\n            backgroundColor: '#00d555',\n          }}\n        >\n          <div\n            style={{\n              position: 'absolute',\n              bottom: '-20px',\n              right: '-50%',\n              fontFamily: 'Poppins',\n              fontStyle: 'normal',\n              fontWeight: '500',\n              fontSize: '12px',\n              lineHeight: '20px',\n              color: '#8E94A7',\n            }}\n          >\n            {values[index]}\n          </div>\n        </div>\n      )}\n    />\n  );\n};\n\nexport default YearsRange;\n","import React from 'react';\nimport { Line, defaults } from 'react-chartjs-2';\n\ndefaults.global.defaultFontColor = '#1a1e2c';\ndefaults.global.defaultFontFamily = 'Poppins';\n\nconst SentimentChart = ({\n  sentimentScores,\n  firstYearIndex,\n  lastYearIndex,\n  sources,\n  entities,\n  groupSources,\n}) => {\n  const colors = [\n    '#0346f2',\n    '#a522d9',\n    '#ff008f',\n    '#ff1369',\n    '#ff5547',\n    '#ff8126',\n    '#ffa600',\n    '#e200b6',\n  ];\n\n  const labels = [\n    '2000',\n    '2001',\n    '2002',\n    '2003',\n    '2004',\n    '2005',\n    '2006',\n    '2007',\n    '2008',\n    '2009',\n    '2010',\n    '2011',\n    '2012',\n    '2013',\n    '2014',\n    '2015',\n    '2016',\n    '2017',\n    '2018',\n    '2019',\n    '2020',\n    '2021',\n  ].slice(firstYearIndex, lastYearIndex);\n\n  const datasets = [];\n  let colorIndex = 0;\n  for (const entity in sentimentScores) {\n    if (entities.has(entity)) {\n      if (groupSources) {\n        const sentiments = [];\n        for (const source in sentimentScores[entity]) {\n          if (sources.has(source)) {\n            sentiments.push(\n              sentimentScores[entity][source].slice(\n                firstYearIndex,\n                lastYearIndex\n              )\n            );\n          }\n        }\n        if (sentiments.length > 0) {\n          const finalSentimentos = [];\n          for (let i = 0; i < sentiments[0].length; i++) {\n            var cur = 0;\n            for (let j = 0; j < sentiments.length; j++) {\n              cur += sentiments[j][i];\n            }\n            cur = cur / sentiments.length;\n            finalSentimentos.push(cur);\n          }\n          datasets.push({\n            label: entity,\n            data: finalSentimentos,\n            fill: false,\n            backgroundColor: colors[colorIndex],\n            borderColor: colors[colorIndex++] + '55',\n            yAxisID: 'y-axis-1',\n          });\n        }\n      } else {\n        for (const source in sentimentScores[entity]) {\n          if (sources.has(source)) {\n            datasets.push({\n              label: source,\n              data: sentimentScores[entity][source].slice(\n                firstYearIndex,\n                lastYearIndex\n              ),\n              fill: false,\n              backgroundColor: colors[colorIndex],\n              borderColor: colors[colorIndex++] + '55',\n              yAxisID: 'y-axis-1',\n            });\n          }\n        }\n      }\n    }\n  }\n\n  const graphData = {\n    labels,\n    datasets,\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-1',\n        },\n      ],\n    },\n  };\n\n  return <Line data={graphData} options={options} />;\n};\n\nexport default SentimentChart;\n","import { ExportToCsv } from 'export-to-csv';\n\nconst options = {\n  fieldSeparator: ',',\n  quoteStrings: '\"',\n  decimalSeparator: '.',\n  showLabels: true,\n  showTitle: false,\n  useTextFile: false,\n  useBom: true,\n  useKeysAsHeaders: true,\n};\n\nconst years = [\n  '2000',\n  '2001',\n  '2002',\n  '2003',\n  '2004',\n  '2005',\n  '2006',\n  '2007',\n  '2008',\n  '2009',\n  '2010',\n  '2011',\n  '2012',\n  '2013',\n  '2014',\n  '2015',\n  '2016',\n  '2017',\n  '2018',\n  '2019',\n  '2020',\n  '2021',\n];\n\nexport const exportCsv = (data, filename) => {\n  for (let entity in data) {\n    let jsonData = [];\n    for (let source in data[entity]) {\n      let dataEntry = { source };\n      let yearCounter = 0;\n      data[entity][source].forEach((value) => {\n        dataEntry[years[yearCounter++]] = value;\n      });\n      jsonData.push(dataEntry);\n    }\n    options.filename = `${filename}_${entity.replace(' ', '_')}`;\n    const csvExporter = new ExportToCsv(options);\n    csvExporter.generateCsv(jsonData.length > 0 ? jsonData : [{}]);\n  }\n};\n","import React, { useState } from 'react';\nimport { Button } from 'reactstrap';\nimport { HiX } from 'react-icons/hi';\nimport { exportCsv } from '../utils/exportCsv';\nimport { withTranslation } from 'react-i18next';\n\nconst ExportModal = ({\n  t,\n  setShowModal,\n  title,\n  data,\n  exportPdf,\n  exportImage,\n}) => {\n  const formats = ['csv', 'pdf', t('image')];\n\n  const [selectedFormats, setSelectedFormats] = useState(new Set());\n\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) setShowModal(false);\n  };\n\n  const toggleFormat = (format) => {\n    if (selectedFormats.has(format)) {\n      setSelectedFormats(\n        (prev) => new Set([...prev].filter((x) => x !== format))\n      );\n    } else {\n      setSelectedFormats((prev) => new Set(prev.add(format)));\n    }\n  };\n\n  const exportResults = () => {\n    if (selectedFormats.has('csv')) exportCsv(data, title);\n    if (selectedFormats.has('pdf')) exportPdf(title);\n    if (selectedFormats.has(t('image'))) exportImage(title);\n  };\n\n  return (\n    <div\n      className=\"backdrop\"\n      role=\"button\"\n      tabIndex={0}\n      onClick={handleClick}\n      onKeyDown={handleClick}\n    >\n      <div className=\"modal-form main-card\">\n        <div className=\"card-header\">\n          <h5 className=\"modal-title\">{t('export_title')}</h5>\n          <HiX\n            size={25}\n            className=\"close-modal-button\"\n            onClick={() => setShowModal(false)}\n          />\n        </div>\n        <p className=\"modal-caption\">{t('export_description')}</p>\n        <ul id=\"selected-sources\">\n          {formats.map((format) => {\n            return (\n              <li key={format}>\n                <label className=\"container\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedFormats.has(format)}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      toggleFormat(format);\n                    }}\n                    onChange={() => {}}\n                    className=\"radio-source\"\n                  />\n                  <span>{format}</span>\n                </label>\n              </li>\n            );\n          })}\n        </ul>\n        <Button\n          type=\"button\"\n          id=\"confirm-export-button\"\n          onClick={() => exportResults()}\n        >\n          {t('confirm')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default withTranslation()(ExportModal);\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\nimport { ImNewspaper } from 'react-icons/im';\nimport '../styles/News.css';\n\nconst News = ({ t, previews, sources, selectedEntity, setSelectedEntity }) => {\n  const [hidden, setHidden] = useState(true);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  return (\n    previews && (\n      <>\n        <div id=\"news-column-container\" className={hidden ? 'hidden' : ''}>\n          <div id=\"news-column\">\n            <ul id=\"news-list\">\n              {previews &&\n                selectedEntity &&\n                [...previews[selectedEntity]]\n                  .filter((preview) => sources.has(preview.website))\n                  .map((preview, i) => {\n                    return (\n                      <a\n                        href={preview.link}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\"\n                        className=\"anchor-news\"\n                        key={i}\n                      >\n                        <li className=\"news-item\">\n                          <span className=\"news-source\">\n                            {preview.site_name}\n                          </span>\n                          <h5 className=\"news-title\">{preview.title}</h5>\n                          <p className=\"news-description\">\n                            {preview.description}\n                          </p>\n                          <img\n                            className=\"news-image\"\n                            src={preview.image}\n                            alt=\" \"\n                          />\n                        </li>\n                      </a>\n                    );\n                  })}\n            </ul>\n          </div>\n          <Dropdown id=\"news-dropdown\" isOpen={dropdownOpen} toggle={toggle}>\n            <DropdownToggle caret>\n              {selectedEntity || t('entity')}\n            </DropdownToggle>\n            <DropdownMenu right>\n              {previews &&\n                Object.keys(previews).map((entity) => {\n                  return (\n                    <DropdownItem\n                      onClick={() => setSelectedEntity(entity)}\n                      key={entity}\n                    >\n                      {entity}\n                    </DropdownItem>\n                  );\n                })}\n            </DropdownMenu>\n          </Dropdown>\n        </div>\n        <Button\n          type=\"button\"\n          className={!hidden ? 'open example-button' : 'example-button'}\n          id=\"show-news-button\"\n          onClick={() => setHidden(!hidden)}\n        >\n          <ImNewspaper size={30} />\n        </Button>\n      </>\n    )\n  );\n};\n\nexport default withTranslation()(News);\n","import React, { useState, useEffect, createRef } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport {\n  exportComponentAsJPEG,\n  exportComponentAsPDF,\n} from 'react-component-export-image';\nimport { HiMinusCircle, HiPlusCircle } from 'react-icons/hi';\nimport { BiDownload, BiInfoCircle } from 'react-icons/bi';\nimport axios from 'axios';\nimport YearsRange from './YearsRange';\nimport SentimentChart from './SentimentChart';\nimport ExportModal from './ExportModal';\nimport { withTranslation } from 'react-i18next';\nimport News from './News';\nimport { Set } from 'immutable';\n\nconst newsSources = ['Correio da Manhã', 'Jornal de Notícias', 'Público'];\n\nfunction Main({ t, examples, setExamples }) {\n  const [form, setForm] = useState({\n    entities: ['André Ventura'],\n  });\n  const [sentimentScores, setSentimentScores] = useState({});\n  const [magnitudeScores, setMagnitudeScores] = useState({});\n  const [previews, setPreviews] = useState(null);\n  const [years, setYears] = useState([2010, 2021]);\n  const [sources, setSources] = useState(new Set(newsSources));\n  const [loadingSources, setLoadingSources] = useState({\n    'Correio da Manhã': 0,\n    'Jornal de Notícias': 0,\n    'Público': 0,\n  });\n  const [showExportModal, setShowExportModal] = useState(false);\n  const [exportTitle, setExportTitle] = useState('');\n  const [exportData, setExportData] = useState({});\n  const [showToolTip, setShowToolTip] = useState(true);\n\n  const [queryEntities, setQueryEntities] = useState(new Set());\n\n  const [selectedEntity, setSelectedEntity] = useState(null);\n\n  const scoreCardRef = createRef();\n  const magnitudeCardRef = createRef();\n\n  useEffect(() => {\n    if (examples.length > 0) {\n      clearOutputs();\n      setForm({ ...form, entities: examples });\n    }\n  }, [examples]);\n\n  useEffect(() => {\n    if (\n      examples.length > 0 &&\n      JSON.stringify(examples) == JSON.stringify(form.entities)\n    ) {\n      handleSubmit();\n      setExamples([]);\n    }\n  }, [form]);\n\n  const handleChange = (e, i) => {\n    setForm({\n      entities: form.entities.map((el, elI) =>\n        elI === i ? e.target.value : el\n      ),\n    });\n  };\n\n  const handleAdd = () => {\n    setForm({\n      entities: form.entities.concat(''),\n    });\n  };\n\n  const handleRemove = (i) => {\n    if (form.entities.length <= 1) return;\n    setQueryEntities(\n      new Set([...form.entities.filter((el, elI) => elI !== i)])\n    );\n    setForm({\n      entities: form.entities.filter((el, elI) => elI !== i),\n    });\n  };\n\n  const requestNews = (entity, source) => {\n    axios\n      .get(`${process.env.REACT_APP_PROXY}/previews`, {\n        params: { entity, source },\n      })\n      .then((res) => {\n        setPreviews((prev) => {\n          let current = Object.assign({}, prev);\n          if (!current) {\n            current = {};\n            current[entity] = new Set();\n          } else if (entity in current) {\n            current[entity] = new Set([\n              ...current[entity],\n              ...res.data.previews,\n            ]);\n          } else {\n            current[entity] = new Set([...res.data.previews]);\n          }\n          return current;\n        });\n        setSelectedEntity((curEntity) => {\n          if (!curEntity) return entity;\n          return curEntity;\n        });\n      });\n  };\n\n  const requestAnalysis = (entity, source) => {\n    let params = { entity, source };\n    setLoadingSources((prev) => {\n      let current = Object.assign({}, prev);\n      current[source] += 1;\n      return current;\n    });\n\n    axios\n      .get(`${process.env.REACT_APP_PROXY}/analyse`, { params })\n      .then((res) => {\n        setSentimentScores((current) => {\n          let st = { ...current };\n          let st_en = { ...st[entity] };\n          st_en[source] = res.data.sentiment[source];\n          st[entity] = st_en;\n\n          return st;\n        });\n\n        setMagnitudeScores((current) => {\n          let st = { ...current };\n          let st_en = { ...st[entity] };\n          st_en[source] = res.data.magnitude[source];\n          st[entity] = st_en;\n          return st;\n        });\n\n        setLoadingSources((prev) => {\n          let current = Object.assign({}, prev);\n          current[source] -= 1;\n          return current;\n        });\n        requestNews(entity, source);\n      });\n  };\n\n  const clearOutputs = () => {\n    setSentimentScores({});\n    setMagnitudeScores({});\n    setPreviews((cur) => {\n      return null;\n    });\n    setSelectedEntity(null);\n    setLoadingSources({\n      'Correio da Manhã': 0,\n      'Jornal de Notícias': 0,\n      'Público': 0,\n    });\n  };\n\n  const handleSubmit = () => {\n    clearOutputs();\n    setQueryEntities(new Set([...form.entities]));\n\n    form.entities.forEach((entity) => {\n      sources.forEach((source) => {\n        requestAnalysis(entity, source);\n      });\n    });\n  };\n\n  const toggleSource = (source) => {\n    if (sources.has(source)) {\n      setSources((prev) => new Set([...prev].filter((x) => x !== source)));\n    } else {\n      setSources((prev) => new Set(prev.add(source)));\n    }\n  };\n\n  const exportPdf = (fileName) => {\n    exportComponentAsPDF(\n      exportTitle === 'sentiment_score' ? scoreCardRef : magnitudeCardRef,\n      {\n        fileName,\n        pdfOptions: { w: 760, h: 458, unit: 'pt', orientation: 'p' },\n      }\n    );\n  };\n\n  const exportImage = (fileName) => {\n    exportComponentAsJPEG(\n      exportTitle === 'sentiment_score' ? scoreCardRef : magnitudeCardRef,\n      {\n        fileName: `${fileName}.jpg`,\n      }\n    );\n  };\n\n  const entitiesInput = () => {\n    const entitiesElements = [];\n    form.entities.forEach((value, i) => {\n      entitiesElements.push(\n        <div className=\"d-flex\" key={i}>\n          <Input\n            type=\"text\"\n            name=\"entity\"\n            className=\"entity-name\"\n            placeholder=\"Write your entity in here\"\n            value={value}\n            onChange={(e) => {\n              handleChange(e, i);\n            }}\n            onKeyPress={(e) => {\n              if (e.key === 'Enter') {\n                e.preventDefault();\n                handleSubmit();\n              }\n            }}\n          />\n          <HiMinusCircle\n            size={30}\n            id=\"minus-entity-button\"\n            className={form.entities.length === 1 ? 'disabled' : ''}\n            onClick={() => {\n              handleRemove(i);\n            }}\n          />\n        </div>\n      );\n    });\n    return entitiesElements;\n  };\n\n  const inputSection = () => {\n    return (\n      <div id=\"input\" className=\"main-card\">\n        <div className=\"card-header\">\n          <h4 className=\"card-title\">{t('search_personality')}</h4>\n          <HiPlusCircle size={30} id=\"add-entity-button\" onClick={handleAdd} />\n        </div>\n        <Form>\n          <FormGroup>{entitiesInput()}</FormGroup>\n          <FormGroup id=\"years-range-group\">\n            <Label for=\"years-range\">{t('year_analyse')}</Label>\n            <YearsRange values={years} setValues={setYears} />\n          </FormGroup>\n          <ul id=\"selected-sources\">\n            {sources &&\n              newsSources.map((source) => {\n                return (\n                  <li key={source}>\n                    <label className=\"container\">\n                      <input\n                        type=\"checkbox\"\n                        checked={sources.has(source)}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          toggleSource(source);\n                        }}\n                        onChange={() => {}}\n                        className=\"radio-source\"\n                      />\n                      <span>{source}</span>\n                    </label>\n                    {loadingSources[source] > 0 && (\n                      <div className=\"loader\"></div>\n                    )}\n                  </li>\n                );\n              })}\n          </ul>\n          <Button id=\"search-button\" onClick={handleSubmit}>\n            {t('confirm')}\n          </Button>\n        </Form>\n      </div>\n    );\n  };\n\n  const sentimentScore = () => {\n    return (\n      <div className=\"main-card\" ref={scoreCardRef}>\n        <div className=\"card-header\">\n          <span className=\"card-title-container\">\n            <h4 className=\"card-title\">{t('sentiment_score')}</h4>\n            <span\n              className=\"tooltip-container\"\n              onMouseEnter={() => setShowToolTip('score')}\n              onMouseLeave={() => setShowToolTip(false)}\n            >\n              <BiInfoCircle size={20} className=\"tooltip-icon\" />\n              <span\n                className=\"tooltip-text\"\n                style={{\n                  visibility: showToolTip === 'score' ? 'visible' : 'hidden',\n                }}\n              >\n                <p>\n                  <strong>{t('sentiment_card_score')}</strong>{' '}\n                  {t('sentiment_card_part1')}{' '}\n                  <strong>{t('sentiment_card_strong')}</strong>{' '}\n                  {t('sentiment_card_part2')}.\n                </p>\n                <p\n                  className=\"gotit\"\n                  onClick={() => {\n                    setShowToolTip(false);\n                  }}\n                >\n                  {t('got_it')}\n                </p>\n              </span>\n            </span>\n          </span>\n          {!showExportModal && (\n            <button\n              type=\"button\"\n              className=\"export-button\"\n              onClick={() => {\n                setShowExportModal(true);\n                setExportTitle('sentiment_score');\n                setExportData(sentimentScores);\n              }}\n            >\n              <BiDownload size={16} className=\"export-icon\" />\n              {t('export')}\n            </button>\n          )}\n        </div>\n        <SentimentChart\n          sentimentScores={sentimentScores}\n          firstYearIndex={years[0] - 2000}\n          lastYearIndex={years[1] - 2000 + 1}\n          sources={sources}\n          entities={queryEntities}\n          groupSources={queryEntities.size > 1}\n        />\n      </div>\n    );\n  };\n\n  const sentimentMagnitude = () => {\n    return (\n      <div className=\"main-card\" ref={magnitudeCardRef}>\n        <div className=\"card-header\">\n          <span className=\"card-title-container\">\n            <h4 className=\"card-title\">{t('sentiment_magnitude')}</h4>\n            <span\n              className=\"tooltip-container\"\n              onMouseEnter={() => setShowToolTip('magnitude')}\n              onMouseLeave={() => setShowToolTip(false)}\n            >\n              <BiInfoCircle size={20} className=\"tooltip-icon\" />\n              <span\n                className=\"tooltip-text\"\n                style={{\n                  visibility:\n                    showToolTip === 'magnitude' ? 'visible' : 'hidden',\n                }}\n              >\n                <p>\n                  <strong>{t('magnitude_card_magnitude')}</strong>{' '}\n                  {t('magnitude_card_part1')}{' '}\n                  <strong>{t('magnitude_card_strong')}</strong>{' '}\n                  {t('magnitude_card_part2')}.\n                </p>\n                <p\n                  className=\"gotit\"\n                  onClick={() => {\n                    setShowToolTip(false);\n                  }}\n                >\n                  {t('got_it')}\n                </p>\n              </span>\n            </span>\n          </span>\n          {!showExportModal && (\n            <button\n              type=\"button\"\n              className=\"export-button\"\n              onClick={() => {\n                setShowExportModal(true);\n                setExportTitle('magnitude_score');\n                setExportData(magnitudeScores);\n              }}\n            >\n              <BiDownload size={16} className=\"export-icon\" />\n              {t('export')}\n            </button>\n          )}\n        </div>\n        <SentimentChart\n          sentimentScores={magnitudeScores}\n          firstYearIndex={years[0] - 2000}\n          lastYearIndex={years[1] - 2000 + 1}\n          sources={sources}\n          entities={queryEntities}\n          groupSources={queryEntities.size > 1}\n        />\n      </div>\n    );\n  };\n\n  const outputSection = () => {\n    return (\n      <div id=\"output\">\n        {sentimentScore()}\n        {sentimentMagnitude()}\n      </div>\n    );\n  };\n\n  const exportModal = () => {\n    return (\n      <ExportModal\n        setShowModal={setShowExportModal}\n        title={exportTitle}\n        data={exportData}\n        exportPdf={exportPdf}\n        exportImage={exportImage}\n      />\n    );\n  };\n\n  return (\n    <div id=\"main-content-container\">\n      <div id=\"main-content\">\n        {inputSection()}\n        {outputSection()}\n        {showExportModal && exportModal()}\n      </div>\n      <News\n        previews={previews}\n        sources={sources}\n        selectedEntity={selectedEntity}\n        setSelectedEntity={setSelectedEntity}\n      />\n    </div>\n  );\n}\n\nexport default withTranslation()(Main);\n","export default __webpack_public_path__ + \"static/media/logo.1344d1b7.svg\";","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\nimport '../styles/Navbar.css';\nimport Logo from '../assets/logo.svg';\nimport { withTranslation } from 'react-i18next';\n\nconst MainNavbar = ({ t, i18n, setTab, tab, setShowExamplesModal }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const changeLanguage = (lng) => {\n    i18n.changeLanguage(lng);\n  };\n\n  return (\n    <div>\n      <Navbar color=\"light\" id=\"navbar\" light expand=\"md\">\n        <NavbarBrand id=\"brand\" href=\"/\">\n          <img src={Logo} alt=\"Arquivo de Sentimentos Logo\" />\n          <span id=\"app-name\">\n            <p>Arquivo de</p>\n            <p>Sentimentos</p>\n          </span>\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <div className=\"header-divider\"></div>\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem\n              onClick={() => {\n                setTab('explore');\n              }}\n              className={tab === 'explore' ? 'nav-item selected' : 'nav-item'}\n            >\n              {t('explore')}\n            </NavItem>\n            <NavItem\n              onClick={() => {\n                setTab('about');\n              }}\n              className={tab === 'about' ? 'nav-item selected' : 'nav-item'}\n            >\n              {t('about')}\n            </NavItem>\n          </Nav>\n          <NavItem\n            onClick={() => {\n              setShowExamplesModal(true);\n            }}\n            className=\"nav-item\"\n          >\n            {t('examples')}\n          </NavItem>\n          <div className=\"header-divider\"></div>\n          <UncontrolledDropdown nav inNavbar id=\"language-dropdown\">\n            <DropdownToggle nav caret>\n              {t('language')}\n            </DropdownToggle>\n            <DropdownMenu right>\n              <DropdownItem\n                onClick={() => {\n                  changeLanguage('pt');\n                }}\n              >\n                PT\n              </DropdownItem>\n              <DropdownItem\n                onClick={() => {\n                  changeLanguage('en');\n                }}\n              >\n                EN\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default withTranslation()(MainNavbar);\n","export default __webpack_public_path__ + \"static/media/rafa.b1c4470d.jpg\";","export default __webpack_public_path__ + \"static/media/ze.d568181e.jpg\";","export default __webpack_public_path__ + \"static/media/tiago.dd4b4368.jpg\";","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Rafa from '../assets/rafa.jpg';\nimport Ze from '../assets/ze.jpg';\nimport Tiago from '../assets/tiago.jpg';\n\nconst About = ({ t }) => {\n  const aboutSection = () => {\n    return (\n      <div className=\"main-card\">\n        <h4 className=\"card-title\">{t('context')}</h4>\n        <div className=\"card-content\">\n          <p>\n            {t('context_part1')}\n            <strong>{t('context_strong1')}</strong>\n            {t('context_part2')}\n          </p>\n          <p>\n            {t('context_part3')}\n            <strong>{t('context_strong2')}</strong>\n            {t('context_part4')}\n            <strong>{t('context_strong3')}</strong>\n            {t('context_part5')}\n          </p>\n        </div>\n      </div>\n    );\n  };\n\n  const goalsSection = () => {\n    return (\n      <div className=\"main-card\">\n        <h4 className=\"card-title\">{t('goals')}</h4>\n        <div className=\"card-content\">\n          <p>\n            {t('goals_part1')}\n            <strong>{t('goals_strong1')}</strong>\n            {t('goals_part2')}\n            <strong>{t('goals_strong2')}</strong>\n            {t('goals_part3')}\n            <strong>{t('goals_strong3')}</strong>\n            {t('goals_part4')}\n          </p>\n        </div>\n      </div>\n    );\n  };\n\n  const howSection = () => {\n    return (\n      <div className=\"main-card\">\n        <h4 className=\"card-title\">{t('howitsdone')}</h4>\n        <div className=\"card-content\">\n          <p>{t('howitsdone_part1')}</p>\n          <p>\n            <strong>\n              <a\n                href=\"https://github.com/arquivo/pwa-technologies/wiki/Arquivo.pt-API\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {t('howitsdone_strong1')}\n              </a>\n            </strong>\n            {t('howitsdone_part2')}\n          </p>\n          <p>\n            <strong>\n              <a\n                href=\"https://cloud.google.com/natural-language\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {t('howitsdone_strong2')}\n              </a>\n            </strong>\n            {t('howitsdone_part3')}\n          </p>\n        </div>\n      </div>\n    );\n  };\n\n  const teamSection = () => {\n    return (\n      <div className=\"main-card\">\n        <h4 className=\"card-title\">{t('team')}</h4>\n        <div className=\"card-content\">\n          <div id=\"team-members\">\n            <span className=\"picture-container\">\n              <img alt=\"João Varela\" className=\"member-picture\" src={Rafa} />\n              <a\n                href=\"https://www.joaovarela.me/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className=\"member-name\"\n              >\n                João Varela\n              </a>\n            </span>\n            <span className=\"picture-container\">\n              <img alt=\"José Silva\" className=\"member-picture\" src={Ze} />\n              <a\n                href=\"https://github.com/krystalgamer\"\n                className=\"member-name\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                José Silva\n              </a>\n            </span>\n            <span className=\"picture-container\">\n              <img alt=\"Tiago Verdade\" className=\"member-picture\" src={Tiago} />\n              <a\n                href=\"https://www.linkedin.com/in/tcverdade/\"\n                className=\"member-name\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Tiago Verdade\n              </a>\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div id=\"about-content\">\n      {aboutSection()}\n      {goalsSection()}\n      {howSection()}\n      {teamSection()}\n    </div>\n  );\n};\n\nexport default withTranslation()(About);\n","import React from 'react';\nimport { HiX } from 'react-icons/hi';\nimport { Button } from 'reactstrap';\nimport { withTranslation } from 'react-i18next';\n\nconst exampleEntities = new Map([\n  ['presidents', ['Marcelo Rebelo de Sousa', 'Cavaco Silva', 'Jorge Sampaio']],\n  ['prime ministers', ['António Costa', 'Passos Coelho', 'José Sócrates']],\n  ['football clubs', ['Benfica', 'Sporting', 'Futebol Clube do Porto']],\n]);\n\nconst ExamplesModal = ({ t, setShowModal, setExamples, setTab }) => {\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) setShowModal(false);\n  };\n\n  const pickExamples = (example) => {\n    setTab('explore');\n    setExamples(exampleEntities.get(example));\n    setShowModal(false);\n  };\n\n  return (\n    <div\n      className=\"backdrop\"\n      role=\"button\"\n      tabIndex={0}\n      onClick={handleClick}\n      onKeyDown={handleClick}\n    >\n      <div className=\"modal-form main-card\">\n        <div className=\"card-header\">\n          <h5 className=\"modal-title\">{t('examples_title')}</h5>\n          <HiX\n            size={25}\n            className=\"close-modal-button\"\n            onClick={() => setShowModal(false)}\n          />\n        </div>\n        <p className=\"modal-caption\">{t('examples_description')}</p>\n        <ul id=\"selected-sources\">\n          <Button\n            type=\"button\"\n            className=\"example-button\"\n            onClick={() => pickExamples('presidents')}\n          >\n            {t('presidents')}\n          </Button>\n          <Button\n            type=\"button\"\n            className=\"example-button\"\n            onClick={() => pickExamples('prime ministers')}\n          >\n            {t('ministers')}\n          </Button>\n          <Button\n            type=\"button\"\n            className=\"example-button\"\n            onClick={() => pickExamples('football clubs')}\n          >\n            {t('football_clubs')}\n          </Button>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default withTranslation()(ExamplesModal);\n","import React, { useState, Suspense } from 'react';\nimport './styles/App.css';\nimport Main from './components/Main';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport ExamplesModal from './components/ExamplesModal';\n\nfunction App({ t }) {\n  const [tab, setTab] = useState('explore');\n  const [showExamplesModal, setShowExamplesModal] = useState(false);\n  const [examples, setExamples] = useState([]);\n\n  return (\n    <Suspense>\n      <div className=\"App\">\n        <Navbar\n          setTab={setTab}\n          tab={tab}\n          setShowExamplesModal={setShowExamplesModal}\n        />\n        {tab === 'explore' && (\n          <Main examples={examples} setExamples={setExamples} />\n        )}\n        {tab === 'about' && <About />}\n        {showExamplesModal && (\n          <ExamplesModal\n            setShowModal={setShowExamplesModal}\n            setExamples={setExamples}\n            setTab={setTab}\n          />\n        )}\n      </div>\n    </Suspense>\n  );\n}\n\nexport default App;\n","import i18n from \"i18next\";\nimport detector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from \"react-i18next\";\nimport translationEN from './locales/en/translation.json';\nimport translationPT from './locales/pt/translation.json';\n// the translations\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  pt: {\n    translation: translationPT\n  },\n\n};\ni18n\n  .use(detector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: \"pt\",\n    fallbackLng: \"pt\",\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport './i18n';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}